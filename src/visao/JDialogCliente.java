
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import modelo.*;
import controle.*;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import static org.jdesktop.observablecollections.ObservableCollections.observableList;

/**
 *
 * @author osmar
 */
public class JDialogCliente extends javax.swing.JDialog {

    Cliente cliente = new Cliente();
    ClienteDAO controle = new ClienteDAO();
    ArrayList<Cliente> listaClientes = new ArrayList<>();

    /**
     * Creates new form NewJDialog
     */
    public JDialogCliente(Frame frame, boolean bln) {

        super(frame, bln);
        initComponents();
        clienteList.clear();
        clienteList.addAll(controle.listarTodos());
    }

//    JDialogCliente(JFrame jFrame, boolean b) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SistemaReiDoGeloPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SistemaReiDoGeloPU").createEntityManager();
        query1 = java.beans.Beans.isDesignTime() ? null : SistemaReiDoGeloPUEntityManager.createQuery("select c from Cliente c");
        clienteList = observableList(new ArrayList<>());
        formatRenderer1 = new renderizador.FormatRenderer();
        jPanel1 = new javax.swing.JPanel();
        labCliente = new javax.swing.JLabel();
        txtBuscarCliente = new javax.swing.JTextField();
        botPesquisar = new javax.swing.JButton();
        botAdicionarCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabCliente = new javax.swing.JTable();

        formatRenderer1.setText("formatRenderer1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labCliente.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labCliente.setText("Clientes");

        txtBuscarCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        botPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-pesquisar-24.png"))); // NOI18N
        botPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botPesquisarActionPerformed(evt);
            }
        });

        botAdicionarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-adicionar-grupo-de-usuÃ¡rios-homem-homem-24.png"))); // NOI18N
        botAdicionarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botAdicionarClienteActionPerformed(evt);
            }
        });

        tabCliente.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, clienteList, tabCliente);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliTipo}"));
        columnBinding.setColumnName("Tipo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliNome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliCpfCnpj}"));
        columnBinding.setColumnName("CPF/ CNPJ");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliTelefone}"));
        columnBinding.setColumnName("Telefone");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliLimite}"));
        columnBinding.setColumnName("Limite");
        columnBinding.setColumnClass(Float.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cliStatus}"));
        columnBinding.setColumnName("Status");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        tabCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabCliente);
        if (tabCliente.getColumnModel().getColumnCount() > 0) {
            tabCliente.getColumnModel().getColumn(4).setCellRenderer(formatRenderer1);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(labCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(346, 346, 346)
                .addComponent(botAdicionarCliente)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labCliente)
                        .addComponent(txtBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(botPesquisar))
                .addGap(27, 27, 27)
                .addComponent(botAdicionarCliente)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        setSize(new java.awt.Dimension(824, 454));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botAdicionarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botAdicionarClienteActionPerformed
        // TODO add your handling code here:
        Cliente c = null;
        JDialogInserirCliente tela = new JDialogInserirCliente(null, true, c);
        tela.setVisible(true);

        clienteList.clear();
        clienteList.addAll(controle.listarTodos());
    }//GEN-LAST:event_botAdicionarClienteActionPerformed


    public void editar(){
        int linha = -1;
        linha = tabCliente.getSelectedRow();
        if (("" + clienteList.get(linha).getCliStatus()).equals("null")) {

            if (linha != -1) {
                Cliente cli = clienteList.get(linha);
                JDialogInserirCliente tela = new JDialogInserirCliente(null, true, cli);
                tela.setVisible(true);

                clienteList.clear();
                clienteList.addAll(controle.listarTodos());
            }
        } else {
            JOptionPane.showMessageDialog(null, "NÃ£o Ã© possÃ­vel alterar cliente inativo!");
        }
        atualizar();
    }
    
    public void delete(){
        int resposta;
        int linha, cod;
        linha = tabCliente.getSelectedRow();

        if (("" + clienteList.get(linha).getCliStatus()).equals("null")) {
            if (linha != -1) {

                cliente = clienteList.get(linha);
                resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir?");
                if (resposta == JOptionPane.YES_OPTION) {
                    cliente.setCliStatus("I");
                    controle.excluir(cliente);
                    clienteList.clear();
                    clienteList.addAll(controle.listarTodos());
                    tabCliente.updateUI();
                }
            } else {
                JOptionPane.showMessageDialog(this, "SELECIONE UM CLIENTE NA TABELA PARA EXCLUIR");
            }
        } else {
            JOptionPane.showMessageDialog(this, "NÃ£o Ã© possÃ­vel excluir cliente inativo");
        }
    }
    private void botPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botPesquisarActionPerformed
        // TODO add your handling code here:

        int linha = -1;
        linha = tabCliente.getSelectedRow();

        if (linha != -1) {
            cliente = clienteList.get(linha);
            txtBuscarCliente.setText(cliente.getCliNome());

        }
//        cliente.setCliNome(txtBuscarCliente.getText());
//      //  controle.findCliente(codCli);
        clienteList.clear();
        clienteList.addAll(controle.consultarPorNome(txtBuscarCliente.getText(),"A"));
        //System.out.println(listaClientes.size());
        //clienteList.clear();


    }//GEN-LAST:event_botPesquisarActionPerformed

    private void atualizar() {

        listaClientes.clear();
        listaClientes.addAll(controle.listarTodos());
    }

    private void tabClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabClienteMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            int linha =  tabCliente.getSelectedRow();
            
                if (linha != -1) {
                    Cliente cli = clienteList.get(linha);
                    JDialogInserirCliente tela = new JDialogInserirCliente(null, true, cli);
                    tela.setVisible(true);

                    clienteList.clear();
                    clienteList.addAll(controle.listarTodos());
                    
                }
            
            atualizar();
        }
        
    }//GEN-LAST:event_tabClienteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        java.awt.EventQueue.invokeLater(() -> {
            try {
                new TelaPrincipalGerente().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(JDialogCliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        });


        /* Create and display the dialog */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SistemaReiDoGeloPUEntityManager;
    private javax.swing.JButton botAdicionarCliente;
    private javax.swing.JButton botPesquisar;
    private java.util.List<modelo.Cliente> clienteList;
    private renderizador.FormatRenderer formatRenderer1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labCliente;
    private javax.persistence.Query query1;
    private javax.swing.JTable tabCliente;
    private javax.swing.JTextField txtBuscarCliente;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
